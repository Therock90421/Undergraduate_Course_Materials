
//临界区运行的两个线程和题目中给的两个线程的逻辑不太一样，
  //写的时候记得自己改一下

#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
#include<unistd.h>
#define true 1
#define false 0
typedef int bool;
bool flag[2];
int turn;
int index;
#define MAX 10000000
int data[MAX] = {0};
unsigned long  sum()
{
     int i;
     unsigned long sum = 0;
     for(i = 0; i < MAX; i++)
         sum = sum + data[i];
     return sum;
}
int sub()
{
    int i,j;
    int sub, ex_sub;
    ex_sub = data[1] - data[0];
    if(ex_sub < 0)
    sub = -ex_sub;
    else sub = ex_sub;
    for(i = 1; i < MAX-1; i++)
    {
     ex_sub = data[i+1] - data[i];
        if(ex_sub > sub || ex_sub + sub < 0)
            sub = (ex_sub>0)?ex_sub:(-ex_sub);
        
    }
    return sub;
}
void procedure0()
{
        int odd = 1;
        int i;
        while(true)
        {
                flag[0] = true;
                turn = 1;
                while(flag[1] && turn == 1)//退出while循环的条件就是，要么另一个线程
//不想要使用关键区，要么此线程拥有访问权限。
                {
                        
                }
                //critical section
                if(index < MAX)
                for(i = 0; i < 100; i++)
                {
                    data[index] = odd;
                    odd = odd + 2;
                    
                    index = index + 1;
                    //printf("%d\n",index);
                }
                else {
                printf("The sum is %lu\n",sum());
                printf("The largest sub is %d\n",sub());
                flag[0] = false;
                pthread_exit(NULL);}
                flag[0] = false;
        }
}
void procedure1()
{
        int even = 0;
        int i;
        while(true)
        {
                flag[1] = true;
                turn = 0;
                while(flag[0] && turn == 0)
                {
                       
                }
                //critical section
                if(index < MAX)
                for(i = 0; i < 100; i++)
                {
                    data[index] = even;
                    even = even + 2;
                    
                    index = index + 1;
                    //printf("%d\n",index);
                }
                else 
                {
                printf("The sum is %lu\n",sum());
                printf("The largest sub is %d\n",sub());
                flag[1] = false;
                pthread_exit(NULL);}
                flag[1] = false;
        }
}
void main()
{

        pthread_t t1,t2;
        flag[0] = flag[1] = false;
        int err;
        turn = 0;
        err =  pthread_create(&t1,NULL,(void*)procedure0,NULL);
        if(err != 0) exit(-1);
        err = pthread_create(&t2,NULL,(void*)procedure1,NULL);
        if(err != 0 ) exit(-1);
        pthread_join(t1,NULL);
        pthread_join(t2,NULL);
        return ;
}
